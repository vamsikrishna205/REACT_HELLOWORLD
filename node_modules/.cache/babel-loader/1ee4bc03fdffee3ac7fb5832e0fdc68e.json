{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaki.vamshi krishna\\\\Desktop\\\\Vamsi\\\\Web\\\\React_HelloWorld\\\\helloworld\\\\src\\\\Components\\\\inside_Body\\\\Left_Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormButton from '../controls/buttons/FormButton';\nimport AttachmentIcon from '../controls/icons/attachment-icon/AttachmentIcon';\nimport './ChatForm.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst isMessageEmpty = textMessage => {\n  return adjustTextMessage(textMessage).length === 0;\n};\n\nconst adjustTextMessage = textMessage => {\n  return textMessage.trim();\n};\n\nconst ChatForm = ({\n  selectedConversation,\n  onMessageSubmitted\n}) => {\n  _s();\n\n  const [textMessage, setTextMessage] = useState('');\n  const disableButton = isMessageEmpty(textMessage);\n  let formContents = null;\n  let handleFormSubmit = null;\n\n  if (selectedConversation) {\n    formContents = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        title: \"Add Attachment\",\n        children: /*#__PURE__*/_jsxDEV(AttachmentIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type a message\",\n        value: textMessage,\n        onChange: e => {\n          setTextMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n        disabled: disableButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n\n    handleFormSubmit = e => {\n      e.preventDefault();\n\n      if (!isMessageEmpty(textMessage)) {\n        onMessageSubmitted(textMessage);\n        setTextMessage('');\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"chat-form\",\n    onSubmit: handleFormSubmit,\n    children: formContents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatForm, \"vpHp0Gtbu8xMO2lbNi0vgU3mU5g=\");\n\n_c = ChatForm;\nexport default ChatForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatForm\");","map":{"version":3,"sources":["C:/Users/kaki.vamshi krishna/Desktop/Vamsi/Web/React_HelloWorld/helloworld/src/Components/inside_Body/Left_Body.js"],"names":["React","useState","FormButton","AttachmentIcon","isMessageEmpty","textMessage","adjustTextMessage","length","trim","ChatForm","selectedConversation","onMessageSubmitted","setTextMessage","disableButton","formContents","handleFormSubmit","e","target","value","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AAEA,OAAO,iBAAP;;;;AAEA,MAAMC,cAAc,GAAIC,WAAD,IAAiB;AACpC,SAAOC,iBAAiB,CAACD,WAAD,CAAjB,CAA+BE,MAA/B,KAA0C,CAAjD;AACH,CAFD;;AAIA,MAAMD,iBAAiB,GAAID,WAAD,IAAiB;AACvC,SAAOA,WAAW,CAACG,IAAZ,EAAP;AACH,CAFD;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,CAAD,KAAkD;AAAA;;AAC/D,QAAM,CAACN,WAAD,EAAcO,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMY,aAAa,GAAGT,cAAc,CAACC,WAAD,CAApC;AACA,MAAIS,YAAY,GAAG,IAAnB;AACA,MAAIC,gBAAgB,GAAG,IAAvB;;AAEA,MAAIL,oBAAJ,EAA0B;AACtBI,IAAAA,YAAY,gBACR;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA,+BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,KAAK,EAAET,WAHX;AAII,QAAA,QAAQ,EAAGW,CAAD,IAAO;AAAEJ,UAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAiC;AAJxD;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEL,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADJ;;AAcAE,IAAAA,gBAAgB,GAAIC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACG,cAAF;;AAEA,UAAI,CAACf,cAAc,CAACC,WAAD,CAAnB,EAAkC;AAC9BM,QAAAA,kBAAkB,CAACN,WAAD,CAAlB;AACAO,QAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AACJ,KAPD;AAQH;;AAED,sBACI;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,QAAQ,EAAEG,gBAA/B;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApCD;;GAAML,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport FormButton from '../controls/buttons/FormButton';\r\nimport AttachmentIcon from '../controls/icons/attachment-icon/AttachmentIcon';\r\n\r\nimport './ChatForm.scss';\r\n\r\nconst isMessageEmpty = (textMessage) => {\r\n    return adjustTextMessage(textMessage).length === 0;\r\n}\r\n\r\nconst adjustTextMessage = (textMessage) => {\r\n    return textMessage.trim();\r\n};\r\n\r\nconst ChatForm = ({ selectedConversation, onMessageSubmitted }) => {\r\n    const [textMessage, setTextMessage] = useState('');\r\n    const disableButton = isMessageEmpty(textMessage);\r\n    let formContents = null;\r\n    let handleFormSubmit = null;\r\n\r\n    if (selectedConversation) {\r\n        formContents = (\r\n            <>\r\n                <div title=\"Add Attachment\">\r\n                    <AttachmentIcon />\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"type a message\"\r\n                    value={textMessage}\r\n                    onChange={(e) => { setTextMessage(e.target.value); }} />\r\n                <FormButton disabled={disableButton}>Send</FormButton>\r\n            </>\r\n        );\r\n\r\n        handleFormSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            if (!isMessageEmpty(textMessage)) {\r\n                onMessageSubmitted(textMessage);\r\n                setTextMessage('');\r\n            }\r\n        };\r\n    }\r\n\r\n    return (\r\n        <form id=\"chat-form\" onSubmit={handleFormSubmit}>\r\n            {formContents}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ChatForm;"]},"metadata":{},"sourceType":"module"}