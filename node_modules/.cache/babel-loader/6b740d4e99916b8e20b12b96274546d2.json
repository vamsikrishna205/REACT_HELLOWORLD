{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaki.vamshi krishna\\\\Desktop\\\\Vamsi\\\\Web\\\\React_HelloWorld\\\\helloworld\\\\src\\\\Components\\\\Switch\\\\Toggle_Switch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PurpleSwitch = withStyles({\n  switchBase: {\n    color: purple[300],\n    '&$checked': {\n      color: purple[500]\n    },\n    '&$checked + $track': {\n      backgroundColor: purple[500]\n    }\n  },\n  checked: {},\n  track: {}\n})(Switch);\nconst IOSSwitch = withStyles(theme => ({\n  root: {\n    width: 42,\n    height: 26,\n    padding: 0,\n    margin: theme.spacing(1)\n  },\n  switchBase: {\n    padding: 1,\n    '&$checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        backgroundColor: '#52d869',\n        opacity: 1,\n        border: 'none'\n      }\n    },\n    '&$focusVisible $thumb': {\n      color: '#52d869',\n      border: '6px solid #fff'\n    }\n  },\n  thumb: {\n    width: 24,\n    height: 24\n  },\n  track: {\n    borderRadius: 26 / 2,\n    border: `1px solid ${theme.palette.grey[400]}`,\n    backgroundColor: theme.palette.grey[50],\n    opacity: 1,\n    transition: theme.transitions.create(['background-color', 'border'])\n  },\n  checked: {},\n  focusVisible: {}\n}))(({\n  classes,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    focusVisibleClassName: classes.focusVisible,\n    disableRipple: true,\n    classes: {\n      root: classes.root,\n      switchBase: classes.switchBase,\n      thumb: classes.thumb,\n      track: classes.track,\n      checked: classes.checked\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n});\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nexport default function CustomizedSwitches() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(PurpleSwitch, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 26\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(IOSSwitch, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }, this),\n      label: \"iOS style\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"div\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        component: \"label\",\n        container: true,\n        alignItems: \"center\",\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"Off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(AntSwitch, {\n            checked: state.checkedC,\n            onChange: handleChange,\n            name: \"checkedC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: \"On\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CustomizedSwitches, \"kHORflz+GZx49BQoHE/at4H/KxM=\");\n\n_c = CustomizedSwitches;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedSwitches\");","map":{"version":3,"sources":["C:/Users/kaki.vamshi krishna/Desktop/Vamsi/Web/React_HelloWorld/helloworld/src/Components/Switch/Toggle_Switch.js"],"names":["React","withStyles","purple","FormGroup","FormControlLabel","Switch","Grid","Typography","PurpleSwitch","switchBase","color","backgroundColor","checked","track","IOSSwitch","theme","root","width","height","padding","margin","spacing","transform","palette","common","white","opacity","border","thumb","borderRadius","grey","transition","transitions","create","focusVisible","classes","props","AntSwitch","display","primary","main","borderColor","boxShadow","CustomizedSwitches","state","setState","useState","checkedA","checkedB","checkedC","handleChange","event","target","name"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { purple } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst PurpleSwitch = withStyles({\r\n    switchBase: {\r\n        color: purple[300],\r\n        '&$checked': {\r\n            color: purple[500],\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: purple[500],\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch);\r\n\r\nconst IOSSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitches() {\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    return (\r\n        <FormGroup>\r\n            <FormControlLabel\r\n                control={<PurpleSwitch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label=\"Custom color\"\r\n            />\r\n            <FormControlLabel\r\n                control={<IOSSwitch checked={state.checkedB} onChange={handleChange} name=\"checkedB\" />}\r\n                label=\"iOS style\"\r\n            />\r\n            <Typography component=\"div\">\r\n                <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                    <Grid item>Off</Grid>\r\n                    <Grid item>\r\n                        <AntSwitch checked={state.checkedC} onChange={handleChange} name=\"checkedC\" />\r\n                    </Grid>\r\n                    <Grid item>On</Grid>\r\n                </Grid>\r\n            </Typography>\r\n        </FormGroup>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}